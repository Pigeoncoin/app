path /tags/{tag_id} {
  read() { isPublic() }
  
  path /{message_id} is TagMessage {
    write() { isCurrentUser(this.uid) && tag_id == this.tag }
  }
}

type TagMessage {
  tag: String;
  uid: String;
  msg: String;
  tc: Number;

  validate() { this.tc == now }
}

path /tagsList {
  read() { isPublic() }

  path /{tag_id} is TagSummary{
    write() { isCloudFunctions() }
  }
}

type TagSummary {
  count: Number;
  msg: String;
  tm: Number;

  validate() { this.tm == now }
}


/// helper functions

isPublic() { true }
isSignedIn() { auth.uid != null }
isCurrentUser(uid) { isSignedIn() && uid == auth.uid }
isCloudFunctions() { false }